version: 2.1

orbs:
  win: circleci/windows@4.1

jobs:
  test_linux:
    parameters:
      ruby_version:
        description: "version tag for the veracross/circleci-ruby-freetds container"
        type: string

    # Primary container image where all commands run
    docker:
      - image: cimg/ruby:<< parameters.ruby_version >>
        environment:
          TESTOPTS: "-v"
          TINYTDS_UNIT_DATASERVER: sqlserver
          TINYTDS_UNIT_HOST: sqlserver
          SA_PASSWORD: super01S3cUr3
          TOXIPROXY_HOST: toxiproxy

      # Service container image
      - image: mcr.microsoft.com/mssql/server:2019-CU16-ubuntu-20.04
        name: sqlserver
        environment:
          ACCEPT_EULA: Y
          SA_PASSWORD: super01S3cUr3

      - image: shopify/toxiproxy:2.1.4
        name: toxiproxy

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: setup sql
          command: |
            curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
            curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
            sudo apt-get update
            sudo ACCEPT_EULA=Y apt-get -y install mssql-tools unixodbc-dev
            /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P $SA_PASSWORD -i ./test/sql/db-create.sql
            /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P $SA_PASSWORD -i ./test/sql/db-login.sql

      - run:
          name: install dependencies
          command: |
            sudo ./test/bin/install-openssl.sh
            sudo ./test/bin/install-freetds.sh

      - restore_cache:
          name: restore gem cache
          keys:
            - v1-bundle-<< parameters.ruby_version >>-{{ .Branch }}-{{ checksum "tiny_tds.gemspec" }}
            - v1-bundle-<< parameters.ruby_version >>-{{ .Branch }}-
            - v1-bundle-<< parameters.ruby_version >>-

      - run:
          name: bundle install
          command: |
            bundle install

      - save_cache:
          name: save gem cache
          paths:
            - ./vendor/bundle
          key: v1-bundle-<< parameters.ruby_version >>-{{ .Branch }}-{{ checksum "tiny_tds.gemspec" }}

      - run:
          name: build gem
          command: |
            bundle exec rake build

      - run:
          name: test gem
          command: |
            bundle exec rake test

  test_windows:
    parameters:
      ruby_version:
        description: "version tag for the veracross/circleci-ruby-freetds container"
        type: string

    executor:
      name: win/server-2022
      shell: powershell.exe

    environment:
      RAKEOPT: "-rdevkit"
      TESTOPTS: '-v'
      MAKE: "make V=1 -j2"

    steps:
      - run:
          name: remove pre-installed ruby
          command: |
            Get-ChildItem -path 'C:\tools\' -filter Ruby* | Remove-Item -Force -Recurse

      - run:
          name: install ruby devkit
          command: |
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;
            Invoke-WebRequest -UseBasicParsing -uri "https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-<< parameters.ruby_version >>/rubyinstaller-devkit-<< parameters.ruby_version >>-x64.exe" -OutFile ruby-setup.exe;
            .\ruby-setup.exe /VERYSILENT /NORESTART /DIR=C:/Ruby<< parameters.ruby_version >>-x64;

      - run:
          name: ruby diagnostics
          command: |
            $Env:PATH = "C:\\Ruby<< parameters.ruby_version >>-x64\\bin;$Env:PATH"
            perl --version
            ruby --version
            gem --version
            rm .\ruby-setup.exe

      - run:
          name: update build env (for ruby 2.5)
          command: |
            $Env:PATH = "C:\\Ruby<< parameters.ruby_version >>-x64\\bin;$Env:PATH"
            ridk install 2 ;
            gem install bundler

      - checkout

      - restore_cache:
          name: restore gem cache
          keys:
            - v1-bundle-<< parameters.ruby_version >>-{{ .Branch }}-{{ checksum "tiny_tds.gemspec" }}
            - v1-bundle-<< parameters.ruby_version >>-{{ .Branch }}-
            - v1-bundle-<< parameters.ruby_version >>-

      - run:
          name: install dependencies
          command: |
            $Env:PATH = "C:\\Ruby<< parameters.ruby_version >>-x64\\bin;$Env:PATH"
            bundle install

      - save_cache:
          name: save gem cache
          paths:
            - ./vendor/bundle
          key: v1-bundle-<< parameters.ruby_version >>-{{ .Branch }}-{{ checksum "tiny_tds.gemspec" }}

      - run:
          name: build
          no_output_timeout: 30m
          command: |
            $Env:PATH = "C:\\Ruby<< parameters.ruby_version >>-x64\\bin;$Env:PATH"
            bundle exec rake ports

      # - run:
      #     # imported from setup.sh, although we should do better...
      #     name: wait for database
      #     command: |
      #       sleep 10

      # - run:
      #     name: run tests
      #     command: |
      #       TINYTDS_UNIT_HOST=localhost bundle exec rake test

workflows:
  test_supported_ruby_versions:
    jobs:
      - test_linux:
          matrix:
            parameters:
              ruby_version:
                - '2.5.9'
                - '2.6.10'
                - '2.7.0'
                - '2.7.6'


      # - test_windows:
      #     matrix:
      #       parameters:
      #         ruby_version:
              #  - '2.5.9-1'
              #  - '2.6.10-1'
              #  - '2.7.6-1'
